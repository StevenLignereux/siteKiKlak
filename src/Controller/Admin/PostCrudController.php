<?php

namespace App\Controller\Admin;

use App\Entity\Post;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Config\Filters;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\AssociationField;
use EasyCorp\Bundle\EasyAdminBundle\Field\ImageField;
use EasyCorp\Bundle\EasyAdminBundle\Field\IntegerField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextEditorField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;

class PostCrudController extends AbstractCrudController
{
    public static function getEntityFqcn(): string
    {
        return Post::class;
    }

    public function configureFilters(Filters $filters): Filters
    {
        return parent::configureFilters($filters); // TODO: Change the autogenerated stub
    }


    public function configureFields(string $pageName): iterable
    {
        $imageFile = ImageField::new('image', 'Image')
            ->setUploadDir('public/uploads/images');

        $image = ImageField::new('image', 'Image')->setBasePath('/uploads/images');

        $fields = [
            IntegerField::new('id', 'ID')->onlyOnIndex(),
            TextField::new('title', 'titre'),
            TextEditorField::new('content', 'contenu'),
            AssociationField::new('category', 'cat√©gorie'),
            AssociationField::new('user', 'auteur'),
        ];

        if ($pageName === Crud::PAGE_INDEX || $pageName === Crud::PAGE_DETAIL) {
            $fields[] = $image;
        } else {
            $fields[] = $imageFile;
        }

        return $fields;
    }

}
